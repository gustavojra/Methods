# For compatibility issues

import os
import sys
import time

file_dir = os.path.dirname('.')
sys.path.append(file_dir)

file_dir = os.path.dirname('../Aux/')
sys.path.append(file_dir)

from tools import *

molecule mol {
    0 1
    O
    H 1 0.96
    H 1 0.96 2 104.5
}

set {
    BASIS         sto-3g
    E_CONVERGENCE 10
    SCF_TYPE      pk
    MAXITER       50
}

# Compute Psi4 Energies

psiE = energy('scf')

basisname = psi4.core.get_global_option("BASIS")
basis = psi4.core.BasisSet.build(mol, target=str(basisname), key='basis')
mints = psi4.core.MintsHelper(basis) 

# call RHF code
from CI import *
rhf = RHF(mol, mints)

ci = CI(rhf)

alphas = np.array([1, 1, 1, 1, 1, 0, 0])
betas  = np.array([1, 1, 1, 1, 1, 0, 0])
occ = np.array([alphas, betas])
ref = Bra(occ)
sexc = ref.cr(5,0).an(1,0)
dexc = sexc.cr(5,1).an(2,1)
print("Reference")
print(ref)
print("Singly Excited")
print(sexc)
print("Doubly Excited")
print(dexc)

#x1 = ref.an(1,1)
#x2 = sexc.an(5,1)
#
#print(x1)
#print(x2)
#
#print(overlap(x1,x2))

one = sexc
two = ref

start = time.process_time()
H1 = Hone(one, two, ci.MIone)
tH1 = str(time.process_time()-start)

start = time.process_time()
H1s = SR_Hone(one, two, ci.MIone)
tH1s = str(time.process_time()-start)

start = time.process_time()
H1b = BF_Hone(one, two, ci.MIone)
tH1b = str(time.process_time()-start)

print("MX value: {} Time Required: {}".format(H1, tH1))
print("SR value: {} Time Required: {}".format(H1s, tH1s))
print("BF value: {} Time Required: {}".format(H1b, tH1b))

psi4.core.print_out('Psi4 RHF Energy:  {:<5.10f}\n'.format(psiE))
